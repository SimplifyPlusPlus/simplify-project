@using Simplify.Project.Shared

<style>
	.handbook {
		padding: 1rem 2rem;
	}

	.handbook-header {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
	}
	
	.handbook-filters {
		display: flex;
		flex-direction: row;
		margin-left: 2rem;
	}
	
	.handbook-filters-item {
		color: var(--accent);
		border: 1px solid var(--accent);
		padding: 2px 18px;
        cursor: pointer;
		text-decoration: none;
	}
	
	.handbook-filters-item:first-child {
		border-right: none;
	}
	
	.handbook-filters-item:last-child {
		border-left: none;
	}
	
	.handbook-filters-item.selected {
		background-color: var(--accent);
		color: white;
		text-decoration: none;
	}
</style>

<div class="handbook">
	<div class="handbook-header">
    	<input type="text" class="simplify-search-field" placeholder="Поиск по справочнику" @oninput="_onInputDebounced!">
    	<div class="handbook-filters">
	        <div class="handbook-filters-item @(FiltersItemIsSelected(HandbookSearchType.Apartments) ? "selected" : "")" 
    		     @onclick="() => FiltersItemOnClick(HandbookSearchType.Apartments)">Квартиры</div>
    		<div class="handbook-filters-item @(FiltersItemIsSelected(HandbookSearchType.Clients) ? "selected" : "")" 
    		     @onclick="() => FiltersItemOnClick(HandbookSearchType.Clients)">Клиенты</div>
    	</div>
    </div>
    
	<div id="handbook-search-items">
		@foreach (var item in SearchResults.OrderBy(dto => dto.Name))
		{
			<p id="@item.Id" class="simplify-list-item" @onclick="args => SelectHandbookItem(item)">
				@item.Name @GetComfortableTypeName(item.Type)
			</p>
		}
	</div>
</div>

<DetailsCard @ref="_clientDetailsCard">
	<Body>
	<div class="user-name">
		<div class="user-name-item">
			<label for="employeeLastname">Фамилия</label>
			<input id="employeeLastname" type="text" class="simplify-search-field" @bind="@_clientEditDto.Lastname" />
		</div>
		<div class="user-name-item">
			<label for="employeeFirstname">Имя</label>
			<input id="employeeFirstname" type="text" class="simplify-search-field" @bind="@_clientEditDto.Firstname" />
		</div>
		<div class="user-name-item">
			<label for="employeePatronymic">Отчество</label>
			<input id="employeePatronymic" type="text" class="simplify-search-field" @bind="@_clientEditDto.Patronymic" />
		</div>
	</div>
	<div class="simplify-card-body">
		<div class="simplify-form-control">
			<label>Номер телефона</label>
			<input type="text" class="simplify-search-field" style="width: 38.5rem;" @bind="@_clientEditDto.Phone">
		</div>
		<div class="simplify-form-control">
			<label>E-mail</label>
			<input type="text" class="simplify-search-field" style="width: 38.5rem;" @bind="@_clientEditDto.Email">
		</div>
		<div class="simplify-form-control">
			<label>Примечание</label>
			<input type="text" class="simplify-search-field" style="width: 38.5rem;" @bind="@_clientEditDto.Note">
		</div>
		<div class="simplify-form-control">
			<label></label>
			<a class="simplify-list-item" style="width: 100%;" @onclick="() => _clientEditDto.IsBlocked = !_clientEditDto.IsBlocked">
				@(_clientEditDto.IsBlocked ? "Разблокировать" : "Заблокировать")
			</a>
		</div>
	</div>
	<div class="simplify-card-footer">
		<div class="simplify-card-footer-item" style="justify-content: end;">
			<button class="simplify-btn" style="width: 15%;" @onclick="async () => await ClientEditSaveOnClick()">
				Сохранить
			</button>
		</div>
	</div>
	</Body>
</DetailsCard>

<DetailsCard @ref="_apartmentDetailsCard" BackgroundColor="var(--brand)">
	<Body>
	<div class="apartment-details-header">
		<p class="apartment-details-number">
			@_apartmentEditDto.Number
		</p>
		<p class="apartment-details-name">
			@_apartmentEditDto.Name
		</p>
	</div>
	<div class="simplify-card-body">
		@* ReSharper disable once SimplifyLinqExpressionUseAll *@
		@if (!_apartmentEditDto.ApartmentRelations.Any(relation => relation.RelationType == ApartmentRelationType.Ownership))
		{
			<div style="display: flex; flex-direction: column; justify-content: space-between; height: 6rem; color: white;">
				<p>Нет владельца</p>
				<div style="display: flex; flex-direction: row; align-items: center; justify-content: start;">
					<p class="simplify-list-item" style="margin-right: 3rem; color: white;" 
					   id="@_registerAndAddClientButtonId" @onclick="async () => await AddRegisterClientCardOpen()">
						Зарегистрировать и добавить...
					</p>
					<p class="simplify-list-item" style="color: white;" 
					   id="@_addExistClientButtonId" @onclick="async () => await AddExistClientCardOpen()">
						Добавить из существующих...
					</p>
				</div>
			</div>
		}
		else
		{
			var ownerships = _apartmentEditDto.ApartmentRelations.Where(relation => relation.RelationType == ApartmentRelationType.Ownership).ToList();
			<div class="simplify-form-control apartment-relations">
				<p>Владельцы</p>
				<p>
					@foreach (var relation in ownerships)
					{
						<div style="display: flex; flex-direction: row; font-weight: 600;">
							@relation.Client.Name
							<div @onclick="async () => await RemoveApartmentRelationWithClient(relation.Id)" style="margin-left: 4px; cursor: pointer;">
								<i class="fa-solid fa-xmark"></i>
							</div>
							@if (relation != ownerships.Last())
							{
								<span>, </span>
							}
						</div>
					}
				</p>
			</div>
			<div class="simplify-form-control apartment-relations">
				@if (_apartmentEditDto.ApartmentRelations.Any(relation => relation.RelationType == ApartmentRelationType.OwnershipFamily))
				{
					<p>Доверенные</p>
					<p>@((MarkupString) string.Join(", ", _apartmentEditDto.ApartmentRelations.Where(relation => relation.RelationType == ApartmentRelationType.OwnershipFamily).Select(relation => $"<b>{relation.Client.Name}</b>")))</p>
				}
				else
				{
					<p>Нет доверенных</p>
					<p>
						<i class="fa-solid fa-plus"></i>
					</p>
				}
			</div>
			<div class="simplify-form-control apartment-relations">
				@if (_apartmentEditDto.ApartmentRelations.Any(relation => relation.RelationType == ApartmentRelationType.Renter))
				{
					<p>Квартиранты</p>
					<p>@((MarkupString) string.Join(", ", _apartmentEditDto.ApartmentRelations.Where(relation => relation.RelationType == ApartmentRelationType.Renter).Select(relation => $"<b>{relation.Client.Name}</b>")))</p>
				}
				else
				{
					<p>Нет квартирантов</p>
					<p>
						<i class="fa-solid fa-plus"></i>
					</p>
				}
			</div>
		}
	</div>
	</Body>
</DetailsCard>

<DetailsCard @ref="@_registerAndAddClientCard">
	<Body>
	<div class="user-name">
		<div class="user-name-item">
			<label for="newClientLastname">Фамилия</label>
			<input id="newClientLastname" type="text" class="simplify-search-field" @bind="@_clientCreateDto.Lastname" />
		</div>
		<div class="user-name-item">
			<label for="newClientFirstname">Имя</label>
			<input id="newClientFirstname" type="text" class="simplify-search-field" @bind="@_clientCreateDto.Firstname" />
		</div>
		<div class="user-name-item">
			<label for="newClientPatronymic">Отчество</label>
			<input id="newClientPatronymic" type="text" class="simplify-search-field" @bind="@_clientCreateDto.Patronymic" />
		</div>
	</div>
	<div class="simplify-card-body">
		<div class="simplify-form-control">
			<label>Номер телефона</label>
			<input type="text" class="simplify-search-field" style="width: 38.5rem;" @bind="@_clientCreateDto.Phone">
		</div>
		<div class="simplify-form-control">
			<label>E-mail</label>
			<input type="text" class="simplify-search-field" style="width: 38.5rem;" @bind="@_clientCreateDto.Email">
		</div>
		<div class="simplify-form-control">
			<label>Примечание</label>
			<input type="text" class="simplify-search-field" style="width: 38.5rem;" @bind="@_clientEditDto.Note">
		</div>
	</div>
	<div class="simplify-card-footer">
		<div class="simplify-card-footer-item" style="justify-content: end;">
			<button class="simplify-btn" style="width: 15%;" @onclick="async () => await ApartmentRelationCreateSave()">
				Добавить
			</button>
		</div>
	</div>
	</Body>
</DetailsCard>

<DetailsCard @ref="_addExistClientCard">
	<Body>
		<div style="min-height: 64px; padding: 0.5rem 0.25rem;">
			<div class="handbook-header">
				<input type="text" class="simplify-search-field" placeholder="Фио пользователя..." @oninput="_existClientOnInputDebounced!">
			</div>
			<div id="clients-search-items">
				@foreach (var item in ExistClientSearchResults.OrderBy(dto => dto.Name))
				{
					<p id="@item.Id" class="simplify-list-item" @onclick="args => SelectExistClient(item)">
						@item.Name
					</p>
				}
			</div>
		</div>
	</Body>
</DetailsCard>
